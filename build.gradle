plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
	id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'umc'
version = '0.0.1-SNAPSHOT'



java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	asciidoctorExt
}

repositories {
	mavenCentral()
	google()
}

dependencies {
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation 'mysql:mysql-connector-java:8.0.32'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'com.google.api-client:google-api-client-jackson2:1.30.10'
	implementation 'com.google.api-client:google-api-client:1.31.2'

//	jwt 토큰
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
//	java.lang.NoClassDefFoundError: javax/xml/bind/DatatypeConverter오류에 따른 의존성 추가
	implementation "javax.xml.bind:jaxb-api:2.3.0"

	//    MySQL connection
	implementation 'mysql:mysql-connector-java:8.0.33'

	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

	//    For QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	//gson
	implementation 'com.google.code.gson:gson:2.8.9'

	implementation 'org.springframework.boot:spring-boot-starter-data-redis'


	implementation 'io.micrometer:micrometer-registry-prometheus'
	implementation 'com.squareup.okhttp3:okhttp:4.9.2'
}

tasks.named('test') {
	useJUnitPlatform()
	outputs.dir snippetsDir // (6)
}

jar {
	enabled = false
}

ext {
	snippetsDir = file('build/generated-snippets') // (5)
}

asciidoctor {
	configurations 'asciidoctorExt' // (7)
	baseDirFollowsSourceFile() // (8)
	inputs.dir snippetsDir // (9)
	dependsOn test // (10)
}

asciidoctor.doFirst {
	delete file('src/main/resources/static/docs')  // (11)
}

task copyDocument(type: Copy) { // (12)
	dependsOn asciidoctor
	from file("build/docs/asciidoc")
	into file("src/main/resources/static/docs")
}
